자바
-----
자료형-변수-배열-객체-함수-조건문
-----
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <script src="자바파일이름.js"></script>
</head>
<body>
    <!-- 주석 -->
</body>
</html>
-----
// 여러줄 쓰고
// 드래그로 묶음 선택 후
// 컨트롤 주석
/*묶음 주석
주석은 콘솔에 표시 안됨*/
-----


<자료형>


-숫자 number
:int와 float를 같은 것(숫자)으로 인식
-문자열 string


콘솔에서 연산 가능


-템플릿 '문자열'
`: 백틱(물결표 그거), ${}안에 있는 것을 연산
->ex) `1 + 2 = ${1 + 2}이다` -> '1 + 2 = 3이다'
	/console.log(`"내년이면 ${19 + 1}살이야"`) -> "내년이면 20살이야"
${}는 여러개 있을 수 있음(약간 %d같은 느낌)


"문자열" + "문자열" 합치기 가능


-문자 선택 문자열
"안녕하세요" [0] -> 첫 글자인 '안'이 출력됨(리스트(인덱스) 같은 느낌)


"문자열 길이 구하기".length ->10 -> 공백 포함 문자열 길이 구함
-백틱과 같이 사용 가능
->console.log(`내년이면 ${"와아".length + 1}살이야`)
	/console.log(`내년이면 ${"와아".length}살이야`)

-----


<연산자>

===
:양쪽이 같다(==)

!==
:양쪽이 다르다(!=)


-----


<객체(오브젝트)>

const p = {
    name : "a",
    //특성 이름 : 특성 값
    points : 1,
    age : 10
};
배열명.객체
객체에서는 중괄호(배열명(리스트같은거)은 대괄호)
p.age = p.age + 10;
나이에 10 더함
p.points = 1000;

배열명.추가할 객체 = 추가할 객체 값
->ex)p.cook = "good"

객체에 함수를 넣을 수 있음
const player = {
    name : "a",
    sayHello : function (xx) {
	console.log(`안녕, ${xx}야, 내 이름은 ${player.name}이야.`);
    }
};
player.sayHello("b");
->객체 안에 함수를 넣을 경우 함수명을 생략할 수 있음


-----


<반복문>

for in / for of


-for (const/let 반복 변수 in 배열(또는 객체)){}
:배열(객체) 요소를 하나 하나 꺼내서 실행할 때 사용(영수증 같은 느낌)
->반복 변수에 배열 길이만큼 0부터 1씩 더하며, 배열 길이만큼의 횟수 반복
ex)
const color = ["red", "blue", "green"]
for (const i in color){
    console.log(`${i}칸의 값: ${color[i]}`)
}


-for (const/let 반복 변수 of 배열(또는 객체)){}
:요소의 값을 반복할 때 사용
->반복 변수에 배열의 값들을 하나씩 넣으며(문자도 넣음), 배열의 길이만큼 반복
ex)
const num = [0, 1, 2]
for (const i of num){
    console.log(`${i}: ${num[i]}`)
}
->const num = [1, 2, 3]
1: 2
2: 3
3: undefined


for / while
->C언어랑 같음


for (let 반복 변수 = n; 반복변수 (부등호(조건)) 반복횟수; 반복변수++){}
->반드시 반복변수는 let


while (조건){}


-----


-console.log()
f12->console->로그에 출력
문자는 "" 안에 넣어 출력
백틱(`${}`)안에 넣으면, ${}안에 내용 연산해 출력(${}는 여러개 있을 수 있음(%d같은 느낌))
ex)console.log(`내년이면 ${19 + 1}살이야`)


-"문자열".length
""안 내용의 문자열 길이를 셈(공백, 기호(?.,! 등) 포함)
백틱 안에 넣어 계산 가능, 연산도 가능
배열명.length로 배열 길이 재기 가능
ex)console.log(`가나다라는 ${"가나다".length + 1}글자다`)


-const x = 1
상수 선언->값 못바꿈

-let y = 2
변수 선언->값 바꿀 수 있음
+자료형 바꿀 수 있음

-var z = 3
변수 선언
옛날거라 안쓰는게 좋다


-alert()
알림이 뜨게 한다
알림이 떴을 때 확인 버튼을 눌러야, 알럿 다음 코드 실행 시작
ex)alert("에러가 발생했습니다")


-배열명 = [,,]
배열 선언
배열명.length로 길이 재기 가능
대괄호

-선언된 배열명.push()
배열에 ()안 내용 추가



-function 함수명(){

};
->함수명();
함수 선언
ex)
function 함수명(배열 변수) {
console.log(`${변수}`)
}
객체 안에 있을 경우 함수명을 생략할 수 있음


-prompt()
문자로 입력을 받음
->ex)let a = prompt();

-parselnt(문자형)
()안 문자형의 것을 숫자형으로 바꾼다
//펄스 인트

->let a = parseInt(prompt("나이를 입력하세요"))
    a = int(input("파이썬으로 치면 비슷함"))


-isNaN()
()안의 것이 숫자가 아니면(문자) 참, 숫자면 거짓 반환
//Not a Number
->let a = NaN; -> a는 숫자가 아님


----------

console.log()

"문자열".length

const x

let y

var z

alert()

배열명 = [,,]

선언된 배열명.push()

function 함수명(){}

prompt()

parselnt()

isNaN()

let a = NaN

const/let 배열명 {객체명 : 객체값, 객체명2 : 객체2값}

----------